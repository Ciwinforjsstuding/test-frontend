[{"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\index.js":"1","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\App\\App.js":"2","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\reducer\\index.js":"3","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\store\\index.js":"4","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\App\\index.js":"5","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\SearchInput\\index.js":"6","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\SearchInput\\SearchInput.js":"7","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\action\\index.js":"8","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\styleComponent\\Button\\Button.js":"9","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\types.js":"10","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\styleComponent\\Select\\Select.js":"11","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\FormAddLineTable\\FormAddLineTable.js":"12","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Tabel\\Tabel.js":"13","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Tabel\\SortColumn\\SortColumn.js":"14","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Tabel\\SortColumn\\index.js":"15","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Tabel\\index.js":"16","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\utils\\spredNumber.js":"17","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Paginator\\index.js":"18","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Paginator\\Paginator.js":"19","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\FormAddLineTable\\index.js":"20","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Tabel\\TableLine\\TableLine.js":"21","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\DetailInfoBar\\DetailInfoBar.js":"22","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\selectors\\index.js":"23","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\DetailInfoBar\\index.js":"24"},{"size":354,"mtime":1608730913501,"results":"25","hashOfConfig":"26"},{"size":1358,"mtime":1609092193326,"results":"27","hashOfConfig":"26"},{"size":2704,"mtime":1609087857270,"results":"28","hashOfConfig":"26"},{"size":211,"mtime":1608662213842,"results":"29","hashOfConfig":"26"},{"size":286,"mtime":1609089947514,"results":"30","hashOfConfig":"26"},{"size":428,"mtime":1608680348512,"results":"31","hashOfConfig":"26"},{"size":1814,"mtime":1609079672315,"results":"32","hashOfConfig":"26"},{"size":1064,"mtime":1609017251974,"results":"33","hashOfConfig":"26"},{"size":297,"mtime":1608928941601,"results":"34","hashOfConfig":"26"},{"size":981,"mtime":1609079719170,"results":"35","hashOfConfig":"26"},{"size":1714,"mtime":1609079247957,"results":"36","hashOfConfig":"26"},{"size":6905,"mtime":1609093412597,"results":"37","hashOfConfig":"26"},{"size":5146,"mtime":1609095349936,"results":"38","hashOfConfig":"26"},{"size":649,"mtime":1608994565779,"results":"39","hashOfConfig":"26"},{"size":291,"mtime":1608994514191,"results":"40","hashOfConfig":"26"},{"size":524,"mtime":1609095339408,"results":"41","hashOfConfig":"26"},{"size":205,"mtime":1609019314927,"results":"42","hashOfConfig":"26"},{"size":494,"mtime":1609020451497,"results":"43","hashOfConfig":"26"},{"size":2223,"mtime":1609084271579,"results":"44","hashOfConfig":"26"},{"size":317,"mtime":1609093362989,"results":"45","hashOfConfig":"26"},{"size":1323,"mtime":1609087550614,"results":"46","hashOfConfig":"26"},{"size":1759,"mtime":1609093034738,"results":"47","hashOfConfig":"26"},{"size":258,"mtime":1609093825049,"results":"48","hashOfConfig":"26"},{"size":458,"mtime":1609090191235,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1uxe9q6",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\index.js",[],["101","102"],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\App\\App.js",["103"],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\reducer\\index.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\store\\index.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\App\\index.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\SearchInput\\index.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\SearchInput\\SearchInput.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\action\\index.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\styleComponent\\Button\\Button.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\types.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\styleComponent\\Select\\Select.js",["104"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport arrowDown from '../../icon/arrow-down-solid.svg';\r\nimport arrowUp from '../../icon/arrow-up-solid.svg';\r\n\r\nimport './select-style.css';\r\n\r\nexport const Select = ({ isOpen = false, choosedText, onHandlerSelect, arrOptions = [], customStyle = {} }) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [seletedText, setSeletedText] = useState(choosedText);\r\n  useEffect(() => {\r\n    setIsActive(isOpen);//инициализация состояния селекта\r\n  }, []);\r\n\r\n  return (\r\n    <div \r\n      className={`${customStyle.select  || \"\"} select `}\r\n      onClick={() => setIsActive(!isActive)}\r\n    >\r\n      <div\r\n        className={`select__choosed-elem flex justify-between items-center  ${customStyle.choosedElem || \"\"}`}\r\n      >\r\n        <span\r\n          className={`select__choosed-text ${customStyle.choosedText || \"\"}`}\r\n        >\r\n          {seletedText}\r\n        </span>\r\n        <img src={isActive? arrowDown : arrowUp} className=\"custom-option\" alt=\"fuck\" />\r\n      </div>\r\n      <div className={isActive ? \"select__drop-down_active flex flex-column items-center\" : \"select__drop-down\"}>\r\n        {\r\n          isActive && arrOptions.map(option => {\r\n            return (\r\n              <div \r\n                key={option.id} \r\n                value={option.value} \r\n                className={`select__option ${customStyle.option || \"\"}`} \r\n                onClick={() => {\r\n                  onHandlerSelect(option.value)\r\n                  setSeletedText(option.text)\r\n                }}>\r\n                {option.text}\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\FormAddLineTable\\FormAddLineTable.js",["105"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Button } from '../../styleComponent/Button/Button';\r\nimport arrowLeft from '../../icon/arrow-left-solid.svg';\r\n\r\n\r\nexport const FormAddLineTable = ({ isOpen = false, formHandler, initialTabLeLine }) => {\r\n  const [ SELECTED_FIRSTNAME, setSELECTED_FIRSTNAME ] = useState(\"\");\r\n  const [ SELECTED_LASTNAME, setSELECTED_LASTNAME ] = useState(\"\");\r\n  const [ SELECTED_EMAIL, setSELECTED_EMAIL ] = useState(\"\");\r\n  const [ SELECTED_PHONE, setSELECTED_PHONE ] = useState(\"\");\r\n  const [ SELECTED_STREET_ADRESS, setSELECTED_STREET_ADRESS ] = useState(\"\");\r\n  const [ SELECTED_CITY, setSELECTED_CITY ] = useState(\"\");\r\n  const [ SELECTED_STATE, setSELECTED_STATE ] = useState(\"\");\r\n  const [ SELECTED_ZIP, setSELECTED_ZIP ] = useState(\"\");\r\n  const [ SELECTED_DESCRIPTION, setSELECTED_DESCRIPTION ] = useState(\"\");\r\n  const [ disabled, setDisabled ] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!((SELECTED_FIRSTNAME && SELECTED_LASTNAME && SELECTED_EMAIL && SELECTED_PHONE && SELECTED_STREET_ADRESS && SELECTED_CITY && SELECTED_STATE && SELECTED_ZIP && SELECTED_DESCRIPTION) == false)) {\r\n      setDisabled(false);\r\n    }\r\n  },[ SELECTED_FIRSTNAME, SELECTED_LASTNAME, SELECTED_EMAIL, SELECTED_PHONE, SELECTED_STREET_ADRESS, SELECTED_CITY, SELECTED_STATE, SELECTED_ZIP, SELECTED_DESCRIPTION ]);\r\n\r\n  const sendForm = async (event) => {\r\n    event.preventDefault();\r\n    const data = {\r\n      SELECTED_FIRSTNAME,\r\n      SELECTED_LASTNAME,\r\n      SELECTED_EMAIL,\r\n      SELECTED_PHONE,\r\n      address: {\r\n        SELECTED_STREET_ADRESS,\r\n        SELECTED_CITY,\r\n        SELECTED_STATE,\r\n        SELECTED_ZIP: Number.parseInt(SELECTED_ZIP)\r\n      },\r\n      SELECTED_DESCRIPTION,\r\n    };\r\n    console.log(\"data\",data)\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/add_table_line\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      const result = await response.json();\r\n      setSELECTED_FIRSTNAME(\"\");\r\n      setSELECTED_LASTNAME(\"\");\r\n      setSELECTED_EMAIL(\"\");\r\n      setSELECTED_PHONE(\"\");\r\n      setSELECTED_STREET_ADRESS(\"\");\r\n      setSELECTED_CITY(\"\");\r\n      setSELECTED_STATE(\"\");\r\n      setSELECTED_ZIP(\"\");\r\n      setSELECTED_DESCRIPTION(\"\");\r\n      setDisabled(true);\r\n      const resopnsForUpdate = await fetch(\"http://localhost:5000/get_table_lines\");\r\n      const update = await resopnsForUpdate.json();\r\n      initialTabLeLine(update);\r\n      console.log(\"result\", result);\r\n    } catch (error) {console.log(\"ERROR druing in send tableLine\", error)}\r\n  }\r\n\r\n\r\n  return(\r\n    <form\r\n      className={isOpen ? \"form_active flex flex-column\" : \"form\"}\r\n    >\r\n      <div className=\"form-header flex items-center\">\r\n        <img\r\n          onClick={() => formHandler()}\r\n          src={arrowLeft} \r\n          className=\"form-header__arrow\" \r\n          alt=\"arrow left close\"\r\n        />\r\n        <span\r\n          className=\"form-header__text\"\r\n        >\r\n          Add a new line in table\r\n        </span>\r\n      </div>\r\n      <div className=\"form-body flex flex-column \">\r\n      <div className=\"form-body-firstname flex items-center\">\r\n        <input \r\n        className=\"form-body-firstname__input margin-input input\"\r\n        onChange={(event) => setSELECTED_FIRSTNAME(event.target.value)}\r\n        value={SELECTED_FIRSTNAME}\r\n        />\r\n        <label className=\"form-body-firstname__label-text label-text\">\r\n          Firstname\r\n        </label>\r\n      </div>\r\n      <div className=\"form-body-lastname flex items-center\">\r\n        <input \r\n          className=\"form-body-lastname__input margin-input input\"\r\n          onChange={(event) => setSELECTED_LASTNAME(event.target.value)}\r\n          value={SELECTED_LASTNAME}\r\n        />\r\n        <label className=\"form-body-lastname__label-text label-text\">\r\n          Lastname\r\n        </label>\r\n      </div>\r\n      <div className=\"form-body-email flex items-center\">\r\n        <input \r\n        className=\"form-body-email__input margin-input input\"\r\n        onChange={(event) => setSELECTED_EMAIL(event.target.value)}\r\n        value={SELECTED_EMAIL}\r\n        />\r\n        <label className=\"form-body-email__label-text label-text\">\r\n          Email\r\n        </label>\r\n      </div>\r\n      <div className=\"form-body-phone flex items-center\">\r\n        <input \r\n          className=\"form-header-body-phone__input margin-input input\"\r\n          onChange={(event) => setSELECTED_PHONE(event.target.value)}\r\n          value={SELECTED_PHONE}\r\n        />\r\n        <label className=\"form-header-body-phone__label-text label-text\">\r\n          Phone\r\n        </label>\r\n      </div>\r\n      <div className=\"form-body-streetAddress  flex items-center\">\r\n        <input \r\n          className=\"form-body-choose-streetAddress__input margin-input input\"\r\n          onChange={(event) => setSELECTED_STREET_ADRESS(event.target.value)}\r\n          value={SELECTED_STREET_ADRESS}\r\n        />\r\n        <label className=\"form-body-streetAddress__label-text label-text\">\r\n          StreetAddress\r\n        </label>\r\n      </div>\r\n      <div className=\"form-body-city flex items-center\">\r\n        <input \r\n          className=\"form-header-body-city__input margin-input input\"\r\n          onChange={(event) => setSELECTED_CITY(event.target.value)}\r\n          value={SELECTED_CITY}\r\n        />\r\n        <label className=\"form-header-body-city__label-text label-text\">\r\n          City\r\n        </label>\r\n      </div>\r\n      <div className=\"form-body-state flex items-center\">\r\n        <input \r\n          className=\"form-header-body-state__input margin-input input\"\r\n          onChange={(event) => setSELECTED_STATE(event.target.value)}\r\n          value={SELECTED_STATE}\r\n        />\r\n        <label className=\"form-header-body-state__label-tex label-text\">\r\n          State\r\n        </label>\r\n      </div>\r\n      <div className=\"form-body-zip flex items-center\">\r\n        <input \r\n          className=\"form-header-body-zip__input margin-input input\"\r\n          onChange={(event) => setSELECTED_ZIP(event.target.value)}\r\n          value={SELECTED_ZIP}\r\n        />\r\n        <label className=\"form-header-body-zip__label-text label-text\">\r\n          Zip\r\n        </label>\r\n      </div>\r\n      <div className=\"form-body-describe flex items-center\">\r\n        <textarea\r\n          className=\"form-body-describe__textarea margin-input\"\r\n          onChange={(event) => setSELECTED_DESCRIPTION(event.target.value)}\r\n          value={SELECTED_DESCRIPTION}\r\n        />\r\n        <label className=\"form-body-describe__label-text label-text\">\r\n          Describe\r\n        </label>\r\n      </div>\r\n      <Button\r\n        onClickHanlder={sendForm}\r\n        textBtn=\"Send\"\r\n        customStyleBtn=\"form-body__btn\"\r\n        disabled={disabled}\r\n      />\r\n      </div>\r\n    </form>\r\n  )\r\n}","C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Tabel\\Tabel.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Tabel\\SortColumn\\SortColumn.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Tabel\\SortColumn\\index.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Tabel\\index.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\utils\\spredNumber.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Paginator\\index.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Paginator\\Paginator.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\FormAddLineTable\\index.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\Tabel\\TableLine\\TableLine.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\DetailInfoBar\\DetailInfoBar.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\selectors\\index.js",[],"C:\\Users\\React\\Desktop\\test-frontend\\react-table\\src\\components\\DetailInfoBar\\index.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":41,"column":51,"nodeType":"112","messageId":"113","endLine":41,"endColumn":53},{"ruleId":"114","severity":1,"message":"115","line":13,"column":6,"nodeType":"116","endLine":13,"endColumn":8,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"111","line":20,"column":190,"nodeType":"112","messageId":"113","endLine":20,"endColumn":192},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isOpen'. Either include it or remove the dependency array. If 'setIsActive' needs the current value of 'isOpen', you can also switch to useReducer instead of useState and read 'isOpen' in the reducer.","ArrayExpression",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [isOpen]",{"range":"123","text":"124"},[516,518],"[isOpen]"]